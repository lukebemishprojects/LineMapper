plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'
    id 'com.gradleup.shadow'
}

group = 'dev.lukebemish'

sourceSets {
    jst {}
}

java {
    withSourcesJar()
    withJavadocJar()
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
    registerFeature('jst') {
        usingSourceSet(sourceSets.jst)
        withSourcesJar()
        withJavadocJar()
    }
}

def mainClassName = 'dev.lukebemish.linemapper.cli.Main'

jar {
    manifest {
        attributes([
                'Main-Class': mainClassName,
                'Implementation-Version': project.version as String
        ])
    }
}

shadowJar {
    manifest {
        attributes([
                'Main-Class': mainClassName,
                'Implementation-Version': project.version as String
        ])
    }
}

dependencies {
    compileOnly cLibs.bundles.compileonly
    implementation 'info.picocli:picocli:4.7.6'
    implementation 'org.ow2.asm:asm:9.7'
    implementation 'org.slf4j:slf4j-simple:2.0.13'
    annotationProcessor cLibs.bundles.annotationprocessor
    annotationProcessor 'info.picocli:picocli-codegen:4.7.6'

    jstImplementation 'net.neoforged.jst:jst-api:1.0.67'
    jstCompileOnly cLibs.bundles.compileonly
    jstAnnotationProcessor cLibs.bundles.annotationprocessor
}

compileJava {
    options.compilerArgs += ["-Aproject=${project.group}/${project.name}"]
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            managedVersioning.sign(signing, it)
            managedVersioning.pom(it, 'LineMapper', 'LGPL-3.0-or-later')
            pom {
                name = 'LineMapper'
                description = 'A tool to remap the line numbers of class files based on various inputs'
            }

            from components.java
        }
    }
}

